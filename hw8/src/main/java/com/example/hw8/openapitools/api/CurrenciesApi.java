/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.hw8.openapitools.api;

import com.example.hw8.openapitools.model.Currency;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.List;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-10-08T22:52:08.119737200+03:00[Europe/Moscow]")
@Validated
@Tag(name = "currencies", description = "the currencies API")
public interface CurrenciesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /currencies : Add a new currency
     *
     * @param currency Currency to add to the system (required)
     * @return Currency added (status code 201)
     */
    @Operation(
        operationId = "addCurrency",
        summary = "Add a new currency",
        tags = { "currencies" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Currency added")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/currencies",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> addCurrency(
        @Parameter(name = "Currency", description = "Currency to add to the system", required = true) @Valid @RequestBody Currency currency
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /currencies/{code} : Get a currency by code
     *
     * @param code  (required)
     * @return A currency (status code 200)
     *         or Currency not found (status code 404)
     */
    @Operation(
        operationId = "getCurrencyByCode",
        summary = "Get a currency by code",
        tags = { "currencies" },
        responses = {
            @ApiResponse(responseCode = "200", description = "A currency", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Currency.class))
            }),
            @ApiResponse(responseCode = "404", description = "Currency not found")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/currencies/{code}",
        produces = { "application/json" }
    )
    default ResponseEntity<Currency> getCurrencyByCode(
        @Parameter(name = "code", description = "", required = true) @PathVariable("code") String code
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : \"code\", \"name\" : \"name\", \"value\" : \"value\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /currencies : List all currencies
     *
     * @return A list of currencies. (status code 200)
     */
    @Operation(
        operationId = "listCurrencies",
        summary = "List all currencies",
        tags = { "currencies" },
        responses = {
            @ApiResponse(responseCode = "200", description = "A list of currencies.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Currency.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/currencies",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Currency>> listCurrencies(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : \"code\", \"name\" : \"name\", \"value\" : \"value\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
